/* eslint-disable */
// 产品字段
export const common = [
  {
    table: 'pi_prod',
    key: 'main_pic',
    text: '主图',
    text_en: 'Picture',
    value: '',
    type: 'img',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'photo',
    rules: 'require',
    check: v => v.main_pic,
    bill_check: 'sc',
  },
  {
    table: 'pi_prods',
    key: 'mg_prod_pic',
    text: '所有图片',
    text_en: 'All pictures',
    value: [],
    type: 'array',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: '',
  },
  {
    table: 'pi_prods',
    key: 'mg_side_pic',
    text: '副图',
    text_en: 'Side pictures',
    value: [],
    type: 'array',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'photo',
  },
  {
    table: 'pi_prod',
    key: 'prod_sort',
    text: '分类',
    text_en: 'Sort',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'category',
    rules: 'require',
    check: v => v.prod_sort,
  },
  {
    table: 'pi_prod',
    key: 'prod_no',
    text: '货号',
    text_en: 'Item No.',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,meet',
    components: 'item-no',
    rules: 'require',
    check: v => v.prod_no,
  },
  {
    table: 'pi_prod',
    key: 'sell_prod_no',
    text: '货号',
    text_en: 'Item No.',
    value: '',
    type: 'string',
    filter: 'qu,inq',
    components: 'sell-item-no',
    rules: 'require',
  },
  // {
  //   table: 'pi_prod',
  //   key: 'buy_prod_no',
  //   text: '买家产品货号',
  //   value: '',
  //   type: 'string',
  //   filter: 'qu,meet,inq',
  //   components: 'buy-item-no',
  //   rules: 'require',
  // },
  {
    table: 'pi_prod',
    key: 'prod_name_en',
    text: '品名_en',
    text_en: 'Description_en',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: '',
    rules: 'require',
    check: v => v.prod_name_en,
    bill_check: 'sc',
  },
  {
    table: 'pi_prod',
    key: 'prod_name',
    text: '品名',
    text_en: 'Description',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'product-name',
    rules: 'require',
    check: v => v.prod_name,
    bill_check: 'sc',
  },
  {
    table: 'pi_prods',
    key: 'mg_detail',
    text: '详情',
    text_en: 'Details',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'details',
    rules: 'require',
  },
  {
    table: 'pi_prods',
    key: 'mg_detail_en',
    text: '详情_en',
    text_en: 'Details_en',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: '',
    rules: 'require',
  },
  {
    table: 'pi_prods',
    key: 'selling_point_en',
    text: '卖点_en',
    text_en: 'Selling Point_en',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: '',
    rules: 'require',
  },
  {
    table: 'pi_prods',
    key: 'selling_point',
    text: '卖点',
    text_en: 'Selling Point',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'selling-point',
    rules: 'require',
  },
  {
    table: 'pi_prod',
    key: 'net_weight',
    text: '产品净重',
    text_en: 'Net Weight',
    value: '',
    type: 'number',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'product-weight',
    rules: 'require',
    check: v => v.net_weight,
  },
  {
    table: 'pi_prod',
    key: 'net_weight_unit',
    text: '净重单位',
    text_en: 'Unit of Weight',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: '',
    check: v => v.net_weight_unit,
  },
  {
    table: 'pi_prod',
    key: 'sale_pkg_en',
    text: '包装_en',
    text_en: 'Packing_en',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: '',
    rules: 'require',
    check: v => v.sale_pkg_en,
    bill_check: 'sc',
  },
  {
    table: 'pi_prod',
    key: 'sale_pkg',
    text: '包装',
    text_en: 'Packing',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'packing',
    rules: 'require',
    check: v => v.sale_pkg,
  },
  {
    table: 'pi_prod',
    key: 'moq',
    text: '起订量',
    text_en: 'MOQ',
    value: '',
    type: 'number',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'moq',
    rules: 'require',
    check: v => v.moq,
  },
  {
    table: 'pi_prod',
    key: 'prod_unit',
    text: '单位',
    text_en: 'Unit',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'qty-unit',
    check: v => v.prod_unit,
  },
  {
    table: 'pi_prod',
    key: 'gross_rate',
    text: '毛利率',
    text_en: 'Gross Margin',
    value: '',
    type: 'number',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'gross-profit',
    rules: 'require',
  },
  {
    table: 'pi_prod',
    key: 'prod_material',
    text: '材质',
    text_en: 'Material',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'material',
    rules: 'require',
  },
  {
    table: 'pi_prod',
    key: 'prod_material_en',
    text: '材质_en',
    text_en: 'Material_en',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: '',
    rules: 'require',
  },
  {
    table: 'pi_prod',
    key: 'hs_code',
    text: '海关码',
    text_en: 'HS Code',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'hs-code',
    rules: 'require',
    check: v => v.hs_code,
    bill_check: 'sc',
  },
  {
    table: 'pi_prod',
    key: 'pu_currency',
    text: '采购币种',
    text_en: 'Purchase Currency',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: '',
  },
  {
    table: 'prod_info',
    key: 'estimate_price',
    text: '预估成本',
    text_en: 'Estimated Cost',
    value: '',
    type: 'number',
    filter: 'pm',
    components: 'estimate-price',
    rules: 'require',
  },
  {
    table: 'prod_info',
    key: 'estimate_price_currency',
    text: '预估成本币种',
    text_en: 'Estimated Cost Currency',
    value: '',
    type: 'string',
    filter: 'pm',
    components: '',
    rules: 'require',
  },
  {
    table: 'pi_prod',
    key: 'supplier_id',
    text: '工厂',
    text_en: 'Supplier',
    value: '',
    type: 'string',
    filter: 'pm',
    components: 'supplier-id',
    rules: '',
    check: v => v.supplier_id,
  },
  {
    table: 'pi_prod',
    key: 'seller_id',
    text: '工厂',
    text_en: 'Supplier',
    value: '',
    type: 'string',
    filter: 'sc,qu,meet,inq',
    components: [
      {text: '工厂+价格', part: 'supplier'},
      {text: '工厂', part: 'seller-id'},
    ],
    rules: 'require',
  },
  {
    table: 'pu_order',
    key: 'pu_price',
    text: '采购价',
    text_en: 'Purchase Price',
    value: '',
    type: 'number',
    filter: 'pu',
    components: 'purchase-price',
    rules: 'require',
    check: v => v.pu_price,
  },
  {
    table: 'pi_prod',
    key: 'pu_price',
    text: '采购价',
    text_en: 'Purchase Price',
    value: '',
    type: 'number',
    filter: 'pm',
    components: 'cost-price',
    rules: '',
  },
  {
    table: 'pi_prod',
    key: 'pu_price',
    text: '采购价',
    text_en: 'Purchase Price',
    value: '',
    type: 'number',
    filter: 'qu,meet,sc',
    components: 'pu-price',
    rules: 'require',
  },
  {
    table: 'pu_order',
    key: 'quantity',
    text: '数量',
    text_en: 'Quantity',
    value: '',
    type: 'number',
    filter: 'pu',
    components: 'purchase-quantity',
    rules: 'require',
  },
  {
    table: 'pi_prod',
    key: 'busi_group_id',
    text: '部门',
    text_en: 'Department',
    value: '',
    filter: 'pm',
    components: '',
  },
  {
    table: 'pi_prod',
    key: 'source_type',
    text: '来源',
    text_en: 'Source',
    value: '',
    filter: 'pm',
    components: 'source-type',
  },
  {
    table: 'pi_prod',
    key: 'original_prod_no',
    text: '原货号',
    text_en: 'Original Item No.',
    value: '',
    type: 'string',
    filter: 'pm,sc,qu,meet,pu',
    components: 'original-item-no',
    rules: 'require',
  },
  {
    table: 'pi_prod',
    key: 'fob_price',
    text: '外销价',
    text_en: 'FOB Price',
    value: '',
    type: 'number',
    filter: 'pm',
    components: 'fob-price',
    rules: 'require',
    check: v => v.fob_price,
  },
  {
    table: 'pi_prod',
    key: 'load_port',
    text: '起运港',
    text_en: 'Load Port',
    value: '',
    type: 'string',
    filter: 'pm,sc,qu,meet,inq',
    components: 'loading-port',
    rules: 'require',
    check: v => v.load_port,
    bill_check: 'sc',
  },
  {
    table: 'pi_prod',
    key: 'decl_name',
    text: '报关名',
    text_en: 'Declaration Name',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: '',
    rules: 'require',
    check: v => v.decl_name,
    bill_check: 'sc',
  },
  {
    table: 'pi_prod',
    key: 'decl_name_en',
    text: '报关名_en',
    text_en: 'Declaration Name_en',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: '',
    rules: 'require',
    check: v => v.decl_name_en,
    bill_check: 'sc',
  },
  {
    table: 'pi_prod',
    key: 'decl_factor',
    text: '申报要素',
    text_en: 'Declaration Elements',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: '',
    rules: 'require',
    check: v => v.decl_factor,
  },
  {
    table: 'pi_prod',
    key: 'delivery_day',
    text: '交货期(天)',
    text_en: 'Leading Time(days)',
    value: '',
    type: 'number',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'delivery-day',
    check: v => v.delivery_day,
  },
  {
    table: 'pi_prod',
    key: 'at_stock',
    text: '',
    value: 'yes',
    type: 'string',
    filter: 'pm,sc,qu,meet,inq',
    components: '',
  },
  {
    table: 'pi_prod',
    key: 'mall_priority',
    text: '',
    value: 0,
    type: 'string',
    filter: 'pm',
    components: '',
  },
  {
    table: 'pi_prod',
    key: 'owner_id',
    text: '产品经理',
    text_en: 'PM',
    value: '',
    type: 'string',
    filter: 'pm',
    components: 'owner-id',
    check: v => v.owner_id,
  },
  {
    table: 'pi_prods',
    key: 'mg_prod_size',
    text: '产品尺寸',
    value: {
      length: '产品尺寸-长',
      width: '产品尺寸-宽',
      height: '产品尺寸-高',
      top_diam: '产品尺寸-上直径',
      diam: '产品尺寸-中直径',
      btm_diam: '产品尺寸-下直径',
    },
    type: 'object',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: [
      {
        text: '长宽高',
        part: 'product-size',
      },
      {
        text: '高、直径(上中下)',
        part: 'anhua-product-size',
      },
    ],
    rules: 'require',
  },
  {
    table: 'pi_prod',
    key: 'prod_barcode',
    text: '条码',
    text_en: 'Bar Code',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'prod-barcode',
  },
  {
    table: 'pi_prod',
    key: 'is_sell',
    text: '',
    value: '',
    type: 'string',
    filter: 'pm',
    components: '',
  },
  {
    table: 'pi_prod',
    key: 'is_buy',
    text: '',
    value: '',
    type: 'string',
    filter: 'pm',
    components: '',
  },
  {
    table: 'pi_prod',
    key: 'is_service',
    text: '',
    value: '',
    type: 'string',
    filter: 'pm',
    components: '',
  },
  {
    table: 'pi_prod',
    key: 'is_bom',
    text: '',
    value: '',
    type: 'string',
    filter: 'pm',
    components: '',
  },
  {
    table: 'pi_prod',
    key: 'is_spare',
    text: '',
    value: '',
    type: 'string',
    filter: 'pm',
    components: '',
  },
  {
    table: 'pi_prod',
    key: 'vat',
    text: '增值税',
    text_en: 'VAT',
    value: '',
    type: 'number',
    filter: 'pm,pu',
    components: 'vat',
  },
  {
    table: 'pi_prod',
    key: 'sn_price',
    text: '内销价',
    text_en: 'Domestic Price',
    value: '',
    type: 'number',
    filter: 'pm',
    components: 'sn-price',
  },
  {
    table: 'pi_prod',
    key: 'currency',
    text: '销售币种',
    text_en: 'Currency',
    value: '',
    type: 'string',
    filter: 'pm',
    components: '',
  },
  {
    table: 'pi_prod',
    key: 'sn_currency',
    text: '内销币种',
    text_en: 'Domestic Currency',
    value: '',
    type: 'string',
    filter: 'pm',
    components: '',
  },
  {
    table: 'pi_prod',
    key: 'prod_spec',
    text: '规格',
    text_en: 'Specification',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'specification',
    rules: 'require',
  },
  {
    table: 'pi_prod',
    key: 'prod_spec_en',
    text: '规格_en',
    text_en: 'Specification_en',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: '',
    rules: 'require',
  },
  {
    table: 'pi_prod',
    key: 'supplier_no',
    text: '工厂货号',
    text_en: 'Supplier Item No.',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet',
    components: 'factory-no',
    rules: 'require',
    check: v => v.supplier_no,
    bill_check: 'sc',
  },
  {
    table: 'pu_order',
    key: 'delivery_date',
    text: '交货日期',
    text_en: 'Delivery Date',
    value: null,
    type: 'date',
    filter: 'pu,sc',
    components: 'delivery-date',
    rules: 'require',
    bill_check: 'sc',
  },
  {
    table: 'pi_prod',
    key: 'cust_po_no',
    text: '客户PO号',
    text_en: 'Cust PO No.',
    value: '',
    type: 'string',
    filter: 'pu,sc,qu,meet,inq',
    components: 'cust-po',
    rules: 'require',
    bill_check: 'sc',
  },
  {
    table: 'pi_prod',
    key: 'etd_date',
    text: '出运日期',
    text_en: 'ETD',
    value: null,
    type: 'date',
    filter: 'sc',
    components: 'shipping-date',
    rules: 'require',
    bill_check: 'sc',
  },
  {
    table: 'pi_prod',
    key: 'origin_type',
    text: '',
    value: '',
    type: 'string',
    filter: 'sc,qu,meet,inq',
    components: '',
  },
  {
    table: 'pi_prod',
    key: 'sell_price',
    text: '价格',
    text_en: 'Price',
    value: '',
    type: 'number',
    filter: 'sc',
    components: 'sell-price',
    rules: 'require',
    bill_check: 'sc',
  },
  {
    table: 'pi_prod',
    key: 'price',
    text: '价格',
    text_en: 'Price',
    value: '',
    type: 'number',
    filter: 'qu,meet,inq',
    components: 'qu-price',
    rules: 'require',
  },
  {
    table: 'pi_prod',
    key: 'sell_quantity',
    text: '数量',
    text_en: 'Quantity',
    value: '',
    type: 'number',
    filter: 'sc',
    components: 'sell-quantity',
    rules: 'require',
    bill_check: 'sc',
  },
  {
    table: 'pi_prod',
    key: 'quantity',
    text: '数量',
    text_en: 'Quantity',
    value: '',
    type: 'number',
    filter: 'qu,meet,inq',
    components: 'qu-quantity',
    rules: 'require',
  },
  {
    table: 'pi_prod',
    key: 'adjust_fee',
    text: '调整费用',
    text_en: 'Adjust Fee',
    value: '',
    type: 'number',
    filter: 'sc',
    components: 'adjust-fee',
    rules: 'require',
  },
  {
    table: 'pi_prod',
    key: 'cust_prod_barcode',
    text: '客户条码',
    text_en: 'Cust Bar Code',
    value: '',
    type: 'string',
    filter: 'pu,sc,qu,meet,inq',
    components: 'cust-barcode',
    rules: 'require',
    bill_check: 'sc',
  },
  {
    table: 'pi_prod',
    key: 'cust_prod_no',
    text: '客户货号',
    text_en: 'Cust Item No.',
    value: '',
    type: 'string',
    filter: 'pu,sc,qu,meet,inq',
    components: 'cust-item-no',
    rules: 'require',
    bill_check: 'sc',
  },
  {
    table: 'pi_prods',
    key: 'mg_pkgs',
    text: '',
    value: [
      {
        pkg_name: '包装名字',
        inner_pkg_pcs: '内盒装量',
        outer_pkg_pcs: '整箱内盒数',
        carton_weight_unit: '',
        carton_nw: '箱净重',
        carton_gw: '箱毛重',
        prod_size_unit: '',
        carton_size_length: '外箱尺寸长',
        carton_size_width: '外箱尺寸宽',
        carton_size_height: '外箱尺寸高',
        pkg_size_length: '内盒尺寸长',
        pkg_size_width: '内盒尺寸宽',
        pkg_size_height: '内盒尺寸高',
        include_prod: '',
        pkg_id: '',
        gp20: '20GP',
        gp40: '40GP',
        hc40: '40HC',
        cbm: '整箱体积',
      },
    ],
    type: 'array',
    filter: 'pm,pu,sc,qu,meet,',
    rules: 'require',
  },
  // {
  //   table: 'pi_prod',
  //   key: 'process',
  //   text: '产品工艺',
  //   value: '',
  //   type: 'string',
  //   filter: 'pm,pu,sc,qu,meet,inq',
  //   components: 'processing',
  //   rules: 'require',
  // },
  // {
  //   table: 'pi_prod',
  //   key: 'post_proc',
  //   text: '后加工工艺',
  //   value: '',
  //   type: 'string',
  //   filter: 'pm,pu,sc,qu,meet,inq',
  //   components: 'post-processing',
  //   rules: 'require',
  // },
  // {
  //   table: 'pi_prod',
  //   key: 'other_size',
  //   text: '其他尺寸',
  //   value: '',
  //   type: 'string',
  //   filter: 'pm,pu,sc,qu,meet,inq',
  //   components: 'other-size',
  //   rules: 'require',
  // },
  {
    table: 'pi_prod',
    key: 'brand_id',
    text: '品牌',
    text_en: 'Brand',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'brand',
    rules: 'require',
    check: v => v.brand_id,
  },
  {
    table: 'pi_prod',
    key: 'model',
    text: '型号',
    text_en: 'Model',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'model',
    rules: 'require',
  },
  {
    table: 'pi_prod',
    key: 'type',
    text: '产品类型',
    text_en: 'Product Type',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'prod-type',
    rules: 'require',
    check: v => v.type,
  },
  {
    table: 'pi_prod',
    key: 'prod_level',
    text: '产品等级',
    text_en: 'Product Level',
    value: '',
    type: 'string',
    filter: 'pm,pu,sc,qu,meet,inq',
    components: 'prod-level',
    rules: 'require',
    check: v => v.prod_level,
  },
  {
    table: 'pi_prod',
    key: 'tag_id',
    text: '标签',
    text_en: 'Tag',
    value: '',
    type: 'string',
    filter: 'pm',
    components: 'prod-tag',
    rules: 'require',
  },
  {
    table: 'pi_prod',
    key: 'origin',
    text: '原产国',
    text_en: 'Origin',
    value: '',
    type: 'string',
    filter: 'pm',
    components: 'prod-country',
    rules: 'require',
    check: v => v.origin,
  },
  // {
  //   table: 'pi_prod',
  //   key: 'remark',
  //   text: '备注',
  //   text_en: 'Remark',
  //   value: 'remark',
  //   type: 'number',
  //   filter: 'qu',
  //   components: 'remark',
  // },
  {
    table: 'pi_prod',
    key: 'prod_source',
    text: '备货方式',
    text_en: 'Source of Goods',
    value: '',
    type: 'string',
    filter: 'qu,meet,sc',
    components: 'stock-type',
    bill_check: 'sc',
  },
  {
    table: 'pi_prod',
    key: 'price_rule',
    text: '官网价格展示',
    text_en: 'B2B Price Display',
    value: '',
    type: 'string',
    filter: 'pm',
    components: '',
  },
  {
    table: 'pi_prod',
    key: 'remarks',
    text: '备注',
    text_en: 'remarks',
    value: '',
    type: 'string',
    filter: 'qu,meet,sc',
    components: 'remarks',
  },
  {
    table: 'pi_prod',
    key: 'sample_fee',
    text: '样品费',
    text_en: 'Sample fee',
    value: '',
    type: 'string',
    filter: 'meet',
    components: 'sample-fee',
  },
]

let special = [] // 个别公司定制字段，加上com_id

// 其他字段，后台自动填充
let other = [
  {
    key: 'decl_rebate',
    text: '出口退税率',
    text_en: 'Export tax rebate',
  },
  {
    key: 'legal_id',
    text: '法人公司',
    text_en: 'Corporate company',
  },
  {
    key: 'shop_status',
    text: '上架状态',
    text_en: 'Shop Status',
  },
  {
    key: 'plan_qty',
    text: '计划数量',
    text_en: 'Plan quantity',
  },
  {
    key: 'busi_user',
    text: '业务员',
    text_en: 'Salesman',
  },
  {
    key: 'operator',
    text: '跟单员',
    text_en: 'Merchandiser',
  },
  {
    key: 'create_user',
    text: '创建人',
    text_en: 'Creater',
  },
  {
    key: 'update_user',
    text: '更新人',
    text_en: 'Updater',
  },
  {
    key: 'create_date',
    text: '创建日期',
    text_en: 'Creation date',
  },
  {
    key: 'update_date',
    text: '更新日期',
    text_en: 'Update date',
  },
  {
    key: 'quote_no',
    text: '报价单',
    text_en: 'Quote No.',
  },
  {
    key: 'quote_date',
    text: '报价日期',
    text_en: 'Quote date',
  },
  {
    key: 'buyer_id',
    text: '客户',
    text_en: 'Buyer',
  },
  {
    key: 'contact',
    text: '联系人',
    text_en: 'Contact',
  },
  {
    key: 'contract_no',
    text: '销售订单',
    text_en: 'SC No.',
  },
  {
    key: 'valid_date',
    text: '生效日期',
    text_en: 'Valid date',
  },
  {
    key: 'purchase_no',
    text: '采购订单',
    text_en: 'PO No.',
  },
  {
    key: 'trade_type',
    text: '业务类型',
    text_en: 'Business type',
  },
  {
    key: 'origin_quantity',
    text: '原始数量',
    text_en: 'Source Qty',
  },
  {
    key: 'book_inv_no',
    text: '订舱发票号',
    text_en: 'Book Invoice No.',
  },
  {
    key: 'so_no',
    text: '订舱确认单',
    text_en: 'S/O No.',
  },
  {
    key: 'load_quantiy',
    text: '装柜数量',
    text_en: 'Load quantity',
  },
  {
    key: 'unload_port',
    text: '目的港',
    text_en: 'Destination Port',
  },
  {
    key: 'bl_no',
    text: '提单',
    text_en: 'B/L No.',
  },
  {
    key: 'vessel',
    text: '船名航次',
    text_en: 'Vessel',
  },
  {
    key: 'crd_date',
    text: '货好日期',
    text_en: 'CRD date',
  },
  {
    key: 'shipment_date',
    text: '开船日',
    text_en: 'B/L date',
  },
  {
    key: 'eta_date',
    text: '到港日',
    text_en: 'ETA',
  },
  {
    key: 'is_split',
    text: '是否分批',
    text_en: 'Split status',
  },
  {
    key: 'is_delay',
    text: '延期状态',
    text_en: 'Delay status',
  },
  {
    key: 'in_quantity',
    text: '入库数量',
    text_en: 'Inbound quantity',
  },
  {
    key: 'ship_quantity',
    text: '发货数量',
    text_en: 'Shipped quantity',
  }
]

let check = [
  {
    table: 'pi_prod',
    key: 'pkg_quantity',
    text: '整箱量',
    value: '',
    type: 'number',
    filter: '',
    components: '',
    check:
      v => v.mg_pkgs && v.mg_pkgs.length && v.mg_pkgs[0].inner_pkg_pcs * v.mg_pkgs[0].outer_pkg_pcs,
  },
  {
    table: 'pi_prod',
    key: 'mg_pkgs_cbm',
    text: '整箱体积',
    value: '',
    type: 'number',
    filter: '',
    components: '',
    check:
      v => v.mg_pkgs && v.mg_pkgs.length && v.mg_pkgs[0].cbm,
  },
  {
    table: 'pi_prod',
    key: 'mg_pkgs_gw',
    text: '整箱毛重',
    value: '',
    type: 'number',
    filter: '',
    components: '',
    check:
      v => v.mg_pkgs && v.mg_pkgs.length && v.mg_pkgs[0].carton_gw,
  },
  {
    table: 'pi_prod',
    key: 'mg_pkgs_size',
    text: '产品尺寸',
    value: '',
    type: 'number',
    filter: '',
    components: '',
    check:
      v => v.mg_pkgs && v.mg_pkgs.length && v.mg_pkgs[0].carton_size_length * v.mg_pkgs[0].carton_size_width * v.mg_pkgs[0].carton_size_height * v.mg_pkgs[0].pkg_size_length * v.mg_pkgs[0].pkg_size_width * v.mg_pkgs[0].pkg_size_height,
  },
]

export default {
  common,
  special,
  check
}
